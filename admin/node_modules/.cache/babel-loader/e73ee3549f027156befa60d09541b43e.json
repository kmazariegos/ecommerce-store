{"ast":null,"code":"import { loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { getProductFailure, getProductStart, getProductSuccess, deleteProductFailure, deleteProductStart, deleteProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductFailure, addProductStart, addProductSuccess } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    console.log(user, 'this failed in apiCalls');\n    dispatch(loginSuccess());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    // update\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"sources":["/Users/karlamazariegos/Desktop/Portfolio-2022/ecommerce-store/admin/src/redux/apiCalls.js"],"names":["loginStart","loginSuccess","publicRequest","userRequest","getProductFailure","getProductStart","getProductSuccess","deleteProductFailure","deleteProductStart","deleteProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductFailure","addProductStart","addProductSuccess","login","dispatch","user","res","post","data","err","console","log","getProducts","get","deleteProduct","id","updateProduct","product","addProduct"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,oBANF,EAOEC,oBAPF,EAQEC,kBARF,EASEC,oBATF,EAUEC,iBAVF,EAWEC,eAXF,EAYEC,iBAZF,QAaO,gBAbP;AAeA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7CD,EAAAA,QAAQ,CAACjB,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMmB,GAAG,GAAG,MAAMjB,aAAa,CAACkB,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAAChB,YAAY,CAACkB,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkB,yBAAlB;AACAD,IAAAA,QAAQ,CAAChB,YAAY,EAAb,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMwB,WAAW,GAAG,MAAOR,QAAP,IAAoB;AAC7CA,EAAAA,QAAQ,CAACZ,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMc,GAAG,GAAG,MAAMjB,aAAa,CAACwB,GAAd,CAAkB,WAAlB,CAAlB;AACAT,IAAAA,QAAQ,CAACX,iBAAiB,CAACa,GAAG,CAACE,IAAL,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMuB,aAAa,GAAG,OAAOC,EAAP,EAAWX,QAAX,KAAwB;AACnDA,EAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACF;AACAS,IAAAA,QAAQ,CAACR,oBAAoB,CAACmB,EAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAON,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMsB,aAAa,GAAG,OAAOD,EAAP,EAAWE,OAAX,EAAoBb,QAApB,KAAiC;AAC5DA,EAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACF;AACAM,IAAAA,QAAQ,CAACL,oBAAoB,CAAC;AAAEgB,MAAAA,EAAF;AAAME,MAAAA;AAAN,KAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOR,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACD;AACF,CARM;AASP,OAAO,MAAMqB,UAAU,GAAG,OAAOD,OAAP,EAAgBb,QAAhB,KAA6B;AACrDA,EAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMK,GAAG,GAAG,MAAMhB,WAAW,CAACiB,IAAZ,CAAkB,WAAlB,EAA8BU,OAA9B,CAAlB;AACAb,IAAAA,QAAQ,CAACF,iBAAiB,CAACI,GAAG,CAACE,IAAL,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AACD;AACF,CARM","sourcesContent":["import { loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\"; \nimport {\n  getProductFailure,\n  getProductStart,\n  getProductSuccess,\n  deleteProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  updateProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  addProductFailure,\n  addProductStart,\n  addProductSuccess,\n} from \"./productRedux\";\n\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    console.log(user, 'this failed in apiCalls')\n    dispatch(loginSuccess());\n  }\n};\n\nexport const getProducts = async (dispatch) => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure()); \n  }\n};\n\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\n\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n  try {\n    // update\n    dispatch(updateProductSuccess({ id, product }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}