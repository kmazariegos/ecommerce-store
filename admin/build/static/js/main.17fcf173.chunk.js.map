{"version":3,"sources":["redux/userRedux.js","requestMethods.js","redux/productRedux.js","redux/apiCalls.js","pages/login/Login.jsx","App.js","redux/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","actions","BASE_URL","publicRequest","axios","create","baseURL","productSlice","headers","token","products","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","updateProductStart","updateProductSuccess","id","product","updateProductFailure","addProductStart","addProductSuccess","push","addProductFailure","login","dispatch","user","a","post","res","data","Login","useState","username","setUsername","password","setPassword","useDispatch","style","height","display","flexDirection","alignItems","justifyContent","padding","marginBottom","type","placeholder","onChange","e","target","value","onClick","preventDefault","width","App","path","element","persistConfig","key","version","storage","rootReducer","combineReducers","userReducer","productReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.17fcf173.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false,\n  },\n  reducers: {\n    loginStart: (state) => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    logout: (state) => {\n      state.currentUser = null;\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure } = userSlice.actions;\nexport default userSlice.reducer;\n","import axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:5000/api/\";\nconst TOKEN = \"\";\n// const TOKEN = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).currentUser.accessToken;\n\nexport const publicRequest = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const userRequest = axios.create({\n  baseURL: BASE_URL,\n  headers: { token: `Bearer ${TOKEN}` },\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    isFetching: false,\n    error: false,\n  },\n  reducers: {\n    //GET ALL\n    getProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products = action.payload;\n    },\n    getProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //DELETE\n    deleteProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.splice(\n        state.products.findIndex((item) => item._id === action.payload),\n        1\n      );\n    },\n    deleteProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //UPDATE\n    updateProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products[\n        state.products.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.product;\n    },\n    updateProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //UPDATE\n    addProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.push(action.payload);\n    },\n    addProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n  },\n});\n\nexport const {\n  getProductStart,\n  getProductSuccess,\n  getProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  updateProductFailure,\n  addProductStart,\n  addProductSuccess,\n  addProductFailure,\n} = productSlice.actions;\n\nexport default productSlice.reducer;\n","import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport {\n  getProductFailure,\n  getProductStart,\n  getProductSuccess,\n  deleteProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  updateProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  addProductFailure,\n  addProductStart,\n  addProductSuccess,\n} from \"./productRedux\";\n\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\n\nexport const getProducts = async (dispatch) => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\n\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\n\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n  try {\n    // update\n    dispatch(updateProductSuccess({ id, product }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/apiCalls\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); \n  const dispatch = useDispatch();\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    login(dispatch, { username, password });\n  };\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <input\n        style={{ padding: 10, marginBottom: 20 }}\n        type=\"text\"\n        placeholder=\"username\"\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        style={{ padding: 10, marginBottom: 20 }}\n        type=\"password\"\n        placeholder=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={handleClick} style={{ padding: 10, width:100 }}>\n        Login\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","// import Sidebar from \"./components/sidebar/Sidebar\";\n// import Topbar from \"./components/topbar/Topbar\"; \nimport \"./App.css\";\n// import Home from \"./pages/home/Home\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n// import UserList from \"./pages/userList/UserList\";\n// import User from \"./pages/user/User\";\n// import NewUser from \"./pages/newUser/NewUser\";\n// import ProductList from \"./pages/productList/ProductList\";\n// import Product from \"./pages/product/Product\";\n// import NewProduct from \"./pages/newProduct/NewProduct\";\nimport Login from \"./pages/login/Login\";\n// import { useSelector } from \"react-redux\";\n\nfunction App() {\n  // const admin = useSelector((state) => state.user.currentUser);\n  return (\n    <Router>\n      <Routes>\n      <Route path=\"/login\" element={<Login/>}></Route>\n      {/* {admin && (\n        <>\n          <Topbar />\n          <div className=\"container\">\n            <Sidebar />\n            <Route exact path=\"/\" element={<Home/>}></Route>\n            <Route path=\"/users\" element={<UserList/>}></Route>\n            <Route path=\"/user/:userId\" element={<User/>}></Route>\n            <Route path=\"/newUser\" element={<NewUser/>}></Route>\n            <Route path=\"/products\" element={<ProductList/>}></Route>\n            <Route path=\"/product/:productId\" element={<Product/>}></Route>\n            <Route path=\"/newproduct\" element={<NewProduct/>}></Route>\n          </div>\n        </>\n      )} */}\n      </Routes>\n  </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\"; \nimport userReducer from \"./userRedux\";\nimport productReducer from \"./productRedux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  product: productReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading=\"null\" persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}